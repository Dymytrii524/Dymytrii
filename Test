import React, { useState, useEffect } from 'react';
import { CheckCircle, XCircle, Clock } from 'lucide-react';

export default function TestingSystem() {
  const [questions, setQuestions] = useState([]);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState({});
  const [timeLeft, setTimeLeft] = useState(10);
  const [isFinished, setIsFinished] = useState(false);
  const [result, setResult] = useState(null);
  const [userName, setUserName] = useState('');

  useEffect(() => {
    
    const loadQuestions = () => {
      const questionsData = [
        {
          id: 1,
          question: "Для чого можно использовать JavaScript?",
          options: [
            "Для создания самостоятельной исполняемой программы",
            "Для обработки событий на web-странице",
            "Для добавления динамики и 'интеллекта' в web-страницу",
            "все варианты верны"
          ],
          correctAnswer: 2 // індекс правильної відповіді
        },
        {
          id: 2,
          question: "Що таке AJAX?",
          options: [
            "Мова програмування",
            "Технологія асинхронних запитів",
            "База даних",
            "Веб-сервер"
          ],
          correctAnswer: 1
        },
        {
          id: 3,
          question: "Для чого використовується JSON?",
          options: [
            "Для стилізації веб-сторінок",
            "Для обміну даними між сервером і клієнтом",
            "Для створення анімацій",
            "Для компіляції коду"
          ],
          correctAnswer: 1
        },
        {
          id: 4,
          question: "Що робить jQuery?",
          options: [
            "Спрощує роботу з DOM",
            "Замінює HTML",
            "Компілює JavaScript",
            "Створює бази даних"
          ],
          correctAnswer: 0
        },
        {
          id: 5,
          question: "Apache - це:",
          options: [
            "Мова програмування",
            "Веб-сервер",
            "База даних",
            "Браузер"
          ],
          correctAnswer: 1
        },
        {
          id: 6,
          question: "Який метод jQuery використовується для AJAX?",
          options: [
            "$.get()",
            "$.post()",
            "$.ajax()",
            "всі варіанти вірні"
          ],
          correctAnswer: 3
        },
        {
          id: 7,
          question: "JSON розшифровується як:",
          options: [
            "JavaScript Object Notation",
            "Java Standard Object Network",
            "JavaScript Online Navigation",
            "Java Syntax Object Name"
          ],
          correctAnswer: 0
        },
        {
          id: 8,
          question: "Яка функція jQuery для додавання обробника події?",
          options: [
            ".click()",
            ".on()",
            ".bind()",
            "всі варіанти вірні"
          ],
          correctAnswer: 3
        },
        {
          id: 9,
          question: "Що означає асинхронність в AJAX?",
          options: [
            "Сторінка перезавантажується",
            "Запити виконуються без блокування інтерфейсу",
            "Дані не передаються",
            "Сервер не відповідає"
          ],
          correctAnswer: 1
        },
        {
          id: 10,
          question: "Формат даних JSON використовує:",
          options: [
            "XML теги",
            "Пари ключ-значення",
            "Таблиці",
            "Бінарний код"
          ],
          correctAnswer: 1
        },
        {
          id: 11,
          question: "jQuery селектор для вибору елемента з id='test':",
          options: [
            "$('.test')",
            "$('#test')",
            "$('test')",
            "$('[id=test]')"
          ],
          correctAnswer: 1
        },
        {
          id: 12,
          question: "Apache може обробляти:",
          options: [
            "Тільки статичні сторінки",
            "PHP, Python, Perl скрипти",
            "Тільки HTML",
            "Тільки CSS"
          ],
          correctAnswer: 1
        }
      ];
      
      setQuestions(questionsData);
    };

    loadQuestions();
  }, []);
  useEffect(() => {
    if (timeLeft > 0 && !isFinished && questions.length > 0) {
      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);
      return () => clearTimeout(timer);
    } else if (timeLeft === 0 && !isFinished) {
      handleFinish();
    }
  }, [timeLeft, isFinished, questions]);

  const handleAnswerChange = (questionId, answerIndex) => {
    setAnswers({
      ...answers,
      [questionId]: answerIndex
    });
  };

  const handleNext = () => {
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
    }
  };

  const handlePrevious = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion(currentQuestion - 1);
    }
  };

  const handleFinish = () => {
    let correctCount = 0;
    questions.forEach(q => {
      if (answers[q.id] === q.correctAnswer) {
        correctCount++;
      }
    });
    
    const score = Math.round((correctCount / questions.length) * 100);
    
    // Симуляція відправки результатів на сервер через AJAX
    // $.ajax({ url: '/save-result', method: 'POST', data: JSON.stringify(resultData) })
    
    setResult({
      score: score,
      correctAnswers: correctCount,
      totalQuestions: questions.length,
      passed: score >= 60
    });
    
    setIsFinished(true);
  };

  if (questions.length === 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center">
        <div className="text-xl text-gray-600">Завантаження питань...</div>
      </div>
    );
  }

  if (isFinished) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
        <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full text-center">
          <div className="mb-6">
            {result.passed ? (
              <CheckCircle className="w-24 h-24 text-green-500 mx-auto" />
            ) : (
              <XCircle className="w-24 h-24 text-red-500 mx-auto" />
            )}
          </div>
          
          <h2 className="text-3xl font-bold mb-4">
            Поздравляем, <span className="text-indigo-600">{userName || 'Имя'}</span>!
          </h2>
          
          <p className="text-xl mb-6">
            Тест сдан на <span className="font-bold text-indigo-600">{result.score} Балл</span>
          </p>
          
          <div className="bg-gray-50 rounded-lg p-4 mb-6">
            <p className="text-gray-700">
              Правильных ответов: <span className="font-bold">{result.correctAnswers}</span> из {result.totalQuestions}
            </p>
          </div>
          
          <button
            onClick={() => window.location.reload()}
            className="bg-indigo-600 text-white px-8 py-3 rounded-lg hover:bg-indigo-700 transition"
          >
            Пройти ще раз
          </button>
        </div>
      </div>
    );
  }

  const question = questions[currentQuestion];
  const progress = ((currentQuestion + 1) / questions.length) * 100;

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4">
      <div className="max-w-3xl mx-auto pt-8">
        {/* Заголовок */}
        <div className="bg-white rounded-2xl shadow-xl p-6 mb-6">
          <h1 className="text-3xl font-bold text-center text-gray-800 mb-2">
            Система тестирования
          </h1>
          <p className="text-center text-gray-600">
            AJAX + Apache + jQuery + JSON
          </p>
        </div>

        {/* Таймер і прогрес */}
        <div className="bg-white rounded-2xl shadow-xl p-6 mb-6">
          <div className="flex justify-between items-center mb-4">
            <div className="flex items-center gap-2">
              <Clock className="w-5 h-5 text-indigo-600" />
              <span className="text-lg font-semibold">
                Осталось: <span className={timeLeft <= 3 ? 'text-red-600' : 'text-indigo-600'}>{timeLeft}</span> секунд
              </span>
            </div>
            <div className="text-lg font-semibold text-gray-700">
              Вопрос {currentQuestion + 1} из {questions.length}
            </div>
          </div>
          
          <div className="w-full bg-gray-200 rounded-full h-3">
            <div 
              className="bg-indigo-600 h-3 rounded-full transition-all duration-300"
              style={{ width: `${progress}%` }}
            />
          </div>
        </div>

        {/* Питання */}
        <div className="bg-white rounded-2xl shadow-xl p-8 mb-6">
          <h2 className="text-xl font-bold text-gray-800 mb-6">
            {question.question}
          </h2>
          
          <div className="space-y-3">
            {question.options.map((option, index) => (
              <label
                key={index}
                className={`flex items-center p-4 rounded-lg border-2 cursor-pointer transition ${
                  answers[question.id] === index
                    ? 'border-indigo-600 bg-indigo-50'
                    : 'border-gray-200 hover:border-indigo-300'
                }`}
              >
                <input
                  type="radio"
                  name={`question-${question.id}`}
                  checked={answers[question.id] === index}
                  onChange={() => handleAnswerChange(question.id, index)}
                  className="w-5 h-5 text-indigo-600"
                />
                <span className="ml-3 text-gray-700">{option}</span>
              </label>
            ))}
          </div>
        </div>

        {/* Кнопки навігації */}
        <div className="flex justify-between gap-4">
          <button
            onClick={handlePrevious}
            disabled={currentQuestion === 0}
            className="px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed transition"
          >
            Назад
          </button>
          
          {currentQuestion === questions.length - 1 ? (
            <button
              onClick={handleFinish}
              className="px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition font-semibold"
            >
              Ответить
            </button>
          ) : (
            <button
              onClick={handleNext}
              className="px-6 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition"
            >
              Следующий
            </button>
          )}
        </div>
      </div>
    </div>
  );
}
